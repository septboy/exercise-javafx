package com.mechanitis.demo.ui;

import static javafx.collections.FXCollections.observableArrayList;

import java.util.function.Consumer;

import org.springframework.stereotype.Component;

import com.mechanitis.demo.client.StockClient;
import com.mechanitis.demo.client.StockPrice;

import javafx.application.Platform;
import javafx.collections.ObservableList;
import javafx.fxml.FXML;
import javafx.scene.chart.LineChart;
import javafx.scene.chart.XYChart;
import javafx.scene.chart.XYChart.Series;
import lombok.extern.log4j.Log4j2;

@Log4j2
@Component
public class StockController implements Consumer<StockPrice> {

    @FXML
    private LineChart<String, Double> chart;
    
    private final StockClient stockClient;
    
    // XYChart.Data<String, Double> : A single data item with data for 2 axis charts
    private final ObservableList<XYChart.Data<String, Double>> seriesData = observableArrayList();

    StockController(final StockClient stockClient) {
        this.stockClient = stockClient;
        log.info("StockController constructor !");
    }

    //this is the controller, and what it does is wires stuff together
    @FXML
    public void initialize() {
    	log.info("StockController.initialize !");
    	
        String symbol = "SYMBOL1";
        ObservableList<Series<String, Double>> data = observableArrayList(
        		new XYChart.Series<>(symbol, seriesData) // A named series of data items
        		);
        chart.setData(data);

        stockClient.pricesFor(symbol).subscribe(this);
        stockClient.pricesFor(symbol).subscribe(this);
    }

    @Override
    public void accept(StockPrice stockPrice) {
    	log.info("StockController.accept !");
        Platform.runLater(
        	() ->
            seriesData.add(
            	new XYChart.Data<>(
            		String.valueOf(stockPrice.getTime().getSecond())
            		,stockPrice.getPrice()
            	)
            )
        );
    }
}
